Threads sometimes need to wait on events to do their work. For example, threads can wait for time to pass, wait for other threads to fill data buffers, pretty much anything you can think of. The classic example is the producer/consumer model. One thread processes data from a shared queue, while the other thread puts data into the shared queue. All operations on the shared queue are protected by a unique lock, making sure that only one thread can use the queue at a time. In this example, there is also a condition variable that would indicate to the processing thread that data is ready in the queue. Condition variables have a wait() function, allowing the thread to only wake up when a specific scenario arises. In this case, the condition variable wait()'s on the queue to be non-empty. 

Type functions are functions that is evaluated at compile-time give a type as its argument or returning a type. For example, computing the smallest supported positive float on a system. Also it could be used to find the byte width of standard types. This is an example of metaprogramming.
